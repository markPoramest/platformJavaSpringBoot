spring.datasource.url=jdbc:mysql://localhost:3306/training?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
spring.jpa.properties.javax.persistence.validation.mode=none
spring.mvc.hiddenmethod.filter.enabled=true

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql = true
# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilderres
# ==============================================================
spring.queries.users-query=select email, password, active from users where email=?
spring.queries.roles-query=select u.email, r.role from users u inner join user_role ur on(u.id=ur.user_id) inner join roles r on(ur.role_id=r.id) where u.email=?
# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always
logging.level.org.springframework.security=DEBUG

spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
spring.session.timeout.seconds=900

cache.environment.name=production
cache.cluster.name=redis-prod-cluster
cache.cluster.user=redis-prod-username

spring.data.elasticsearch.cluster-name=${elasticName:elasticsearch}
spring.data.elasticsearch.cluster-nodes=${elasticIp:localhost:9300}
